@using TaskLog2ndGen.Models
@model TaskLog2ndGen.ViewModels.TaskViewModel

<h2>Edit Task</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.taskId)

        <div class="form-group">
            <label for="primaryContact" class="control-label col-md-2">Primary Contact</label>
            <div class="col-md-10">
                @Html.DropDownList("primaryContact", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.primaryContact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="secondaryContact" class="control-label col-md-2">Secondary Contact</label>
            <div class="col-md-10">
                @Html.DropDownList("secondaryContact", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.secondaryContact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="serviceTeam" class="control-label col-md-2">Service Team</label>
            <div class="col-md-10">
                @Html.DropDownList("serviceTeam", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.serviceTeam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="serviceGroup" class="control-label col-md-2">Service Group</label>
            <div class="col-md-10">
                @Html.DropDownList("serviceGroup", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.serviceGroup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="businessUnit" class="control-label col-md-2">Business Unit</label>
            <div class="col-md-10">
                @Html.DropDownList("businessUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.businessUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="platform" class="control-label col-md-2">Platform</label>
            <div class="col-md-10">
                @Html.DropDownList("platform", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.platform, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="environment" class="control-label col-md-2">Environment</label>
            <div class="col-md-10">
                @Html.DropDownList("environment", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.environment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="category" class="control-label col-md-2">Category</label>
            <div class="col-md-10">
                @Html.DropDownList("category", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="urgency" class="control-label col-md-2">Urgency</label>
            <div class="col-md-10">
                @Html.DropDownList("urgency", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.urgency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="application" class="control-label col-md-2">Application</label>
            <div class="col-md-10">
                @Html.DropDownList("application", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.application, "", new { @class = "text-danger" })
            </div>
        </div>

        <fieldset id="container">
            <legend>References</legend>

            @Html.DropDownList("refTypes")

            @for (int i = 0; i < Model.references.Count; i++)
            {
                <div class="row">
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.references[i].referenceNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.references[i].referenceNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.references[i].referenceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.references[i].referenceType, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.references[i].referenceType, new SelectList((List<ReferenceType>)ViewBag.ReferenceTypes, "referenceTypeCode", "referenceTypeCode", Model.references[i].referenceType), new { @class = "form-control", @name = "references.referenceType" })
                                @Html.ValidationMessageFor(model => model.references[i].referenceType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <input type="button" class="btn btn-secondary btnRemove" value="Remove Reference" />
                    </div>
                </div>
            }
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnAdd" class="btn btn-secondary" value="Add Reference" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.links, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.links, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.links, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="highLevelEstimate" class="control-label col-md-2">High Level Estimate</label>
            <div class="col-md-10">
                @Html.DropDownList("highLevelEstimate", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.highLevelEstimate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p>
                <input type="submit" value="Submit" class="btn btn-secondary" />
                @Html.ActionLink("Cancel", "Details", new { id = Model.taskId }, new { @class = "btn btn-secondary" })
            </p>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}